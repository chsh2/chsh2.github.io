<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introduction on NijiGPen Documentation</title>
    <link>https://chsh2.github.io/nijigp/</link>
    <description>Recent content in Introduction on NijiGPen Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://chsh2.github.io/nijigp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Algorithm Design</title>
      <link>https://chsh2.github.io/nijigp/docs/developer_notes/algorithms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/developer_notes/algorithms/</guid>
      <description>This page is still under construction. The information maybe incomplete.Algorithm Design#This page provides an in-depth exploration of the algorithms utilized by this add-on, both for developers interested in vector graphics processing and for users wondering about the core principles underlying the add-onâ€™s functionality.
It is less recommended to read the source code directly, since the code details are not excellent and still need refinement. Instead, this article focuses more on the mathematics behind each feature.</description>
    </item>
    
    <item>
      <title>Boolean</title>
      <link>https://chsh2.github.io/nijigp/docs/functionality/polygon/bool/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/functionality/polygon/bool/</guid>
      <description>Boolean#NijiGPen provides following 2D boolean operations on the closed paths of two or more strokes:
Union (Sum, OR) Difference (Subtract, NOT) Intersection (AND) Exclusive (XOR) These functions are realized by calling the Clipper library. Please check the link for more details.
Edit Mode Operators#There are multiple buttons in the Edit mode panel, which are shortcuts of the same operator. This operator takes the paths of selected strokes as the input, and generate new strokes which are results of the boolean operation.</description>
    </item>
    
    <item>
      <title>Brush Import</title>
      <link>https://chsh2.github.io/nijigp/docs/functionality/io/brushes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/functionality/io/brushes/</guid>
      <description>Brush Import#Through the Import/Export sidebar panel, the user can load brushes of some other painting software&amp;rsquo;s file formats into Blender and extract their textures to create Grease Pencil materials/brushes. Currently, the following formats are supported:
.abr brushes that are commonly used in Adobe Photoshop, GIMP and Krita. .gbr brushes of GIMP. .brush or .brushset files exported from Procreate. .sut brushes exported from Clip Studio Paint. Please be sure to follow the license and terms of service of the original brush, especially for those acquired from an asset store, which usually prohibits some behaviors such as redistribution.</description>
    </item>
    
    <item>
      <title>Frame Animations</title>
      <link>https://chsh2.github.io/nijigp/docs/functionality/animation/frame_animation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/functionality/animation/frame_animation/</guid>
      <description>Frame Animations#Multiframe Operations#Grease Pencil has a Multiframe Tool allowing users to draw or edit on multiple frames at the same time. Some of NijiGPen&amp;rsquo;s operators in the Edit mode support this feature. With the Multiframe tool enabled, they are performed on all selected frames, instead of the active frame.
In addition, new options will appear in the multiframe mode for some operators, which are designed for making animated effects, including:</description>
    </item>
    
    <item>
      <title>Mesh Generation</title>
      <link>https://chsh2.github.io/nijigp/docs/functionality/mesh/generation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/functionality/mesh/generation/</guid>
      <description>Mesh Generation#NijiGPen allows users to convert a Grease Pencil stroke to a mesh object (either planar or 3D). This can have multiple usages, such as:
Adding the 3D shading effect to a 2D painting. Quick modeling from sketches. A stroke will be treated as a closed shape during mesh generation. Therefore, the line-only strokes may look different after the generation. You may either ignore them in the options or convert them to outlines first.</description>
    </item>
    
    <item>
      <title>Python Packages</title>
      <link>https://chsh2.github.io/nijigp/docs/get_started/installation/dependency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/get_started/installation/dependency/</guid>
      <description>Python Packages#NijiGPen&amp;rsquo;s functionality relies on some third-party Python packages, which have to be separately downloaded and installed. If you have no experience with Blender add-ons that have similar requirements, it is strongly suggested to read this page before using the add-on.
Dependency Summary#The table below lists the packages required for each type of operation. Lacking a package will not affect operations that do not require it.</description>
    </item>
    
    <item>
      <title>Scene Setup</title>
      <link>https://chsh2.github.io/nijigp/docs/tips/scene_setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/tips/scene_setup/</guid>
      <description>Scene Setup#Blender comes with a template start file &amp;ldquo;2D Animation&amp;rdquo; that is convenient for painting. However, there are also some tricky parts in setting up the scene, especially when we put Grease Pencil and 3D objects in the same scene, including the meshes generated by this add-on. Here are some tips written in the form of FAQ.
Why cannot I see any shading effect when I generate meshes from Grease Pencil?</description>
    </item>
    
    <item>
      <title>Sketch Cleanup</title>
      <link>https://chsh2.github.io/nijigp/docs/functionality/line/fit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/functionality/line/fit/</guid>
      <description>Sketch Cleanup#NijiGPen&amp;rsquo;s line operators provide functionality that helps turn raw sketches into final line art. A raw sketch usually contains repeated strokes, line splits, and line gaps that require a lot of manual effort to clean up. The Line Fit operators can speed up this process by merging multiple strokes into a single, smooth stroke.
Fit Sketch to Single Line#The major way of using this function is from the sidebar panel in the Edit mode.</description>
    </item>
    
    <item>
      <title>Basic Usage</title>
      <link>https://chsh2.github.io/nijigp/docs/get_started/basic_usage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/get_started/basic_usage/</guid>
      <description>Basic Usage#User Interface#NijiGPen creates new user interfaces to trigger its functions in the following places of Blender.
Sidebar Panels#A tab named NijiGP will appear in the sidebar of the 3D Viewport, if the active object is Grease Pencil and the mode is Draw, Edit or Weight Paint. This is the major way of calling NijiGPen&amp;rsquo;s functions.
NijiGPen operators are categorized in several panels. Depending on the current mode, different panels or operators may appear.</description>
    </item>
    
    <item>
      <title>Data Structures</title>
      <link>https://chsh2.github.io/nijigp/docs/developer_notes/data_structures/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/developer_notes/data_structures/</guid>
      <description>Data Structures#Despite the new operators, this add-on prefers an unobtrusive style that does not change the original way that Blender&amp;rsquo;s objects work. However, a small number of operators must create new properties/attributes in an object to store additional information. This pages list all new data structures created by the add-on.
Add-On Registering#All add-on operators are registered under bpy.ops.gpencil with the name prefix nijigp_. The add-on chooses gpencil as the category instead of creating a new one, because this allows users to assign shortcut to each operator.</description>
    </item>
    
    <item>
      <title>Limitations</title>
      <link>https://chsh2.github.io/nijigp/docs/tips/limitations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/tips/limitations/</guid>
      <description>Limitations#The add-on has a number of limitations in different aspects, including:
Unfinished features of the add-on itself, which may be improved in future releases. Limitations due to Blender&amp;rsquo;s own design, which may lead to different behaviors from common graphics software. This page lists limitations which are general to multiple operators. Besides it, the constraints of 2D space can be found in Basic Usage. The limitation of each single operator will be recorded in their own page.</description>
    </item>
    
    <item>
      <title>Mesh Management</title>
      <link>https://chsh2.github.io/nijigp/docs/functionality/mesh/management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/functionality/mesh/management/</guid>
      <description>Mesh Management#During the mesh generation, since each stroke will be converted to a separate mesh object, it is common to have many objects generated from the same Grease Pencil painting. This page will discuss the methods and options to handle multiple generated objects.
Multi-Object Alignment#This section exists in each mesh generation operator&amp;rsquo;s option panel, defining how multiple generated meshes are aligned in the depth dimension.</description>
    </item>
    
    <item>
      <title>Offset</title>
      <link>https://chsh2.github.io/nijigp/docs/functionality/polygon/offset/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/functionality/polygon/offset/</guid>
      <description>Offset#The 2D Offset operation is performed on the path of a stroke to achieve inflating/deflating/beveling of the shape.
Although Blender has some inset/bevel operators/modifiers, they are not available for Grease Pencil. Besides, compared with Blender&amp;rsquo;s method, this add-on will not cause the self-intersection of the output shape.
These functions are realized by calling the Clipper library. Please check the link for more details.
From Sidebar Panel#The Offset button in the sidebar panel will offset each selected stroke with a given length value.</description>
    </item>
    
    <item>
      <title>Palette Import</title>
      <link>https://chsh2.github.io/nijigp/docs/functionality/io/colors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/functionality/io/colors/</guid>
      <description>Palette Import#Through the Import/Export sidebar panel, the user can import some palette/swatch files which contain color information. The add-on will convert them to Blender palettes. Currently, the following file formats are supported:
.aco files used by Adobe Photoshop and Clip Studio Paint. .swatches files used by Procreate. In addition, color codes can also be directly pasted to Blender. Please refer to the clipboard utilities for more information.Recolor with a Palette#The add-on also provides with a utility to quickly color the drawing using the imported palette.</description>
    </item>
    
    <item>
      <title>Rigging Utilities</title>
      <link>https://chsh2.github.io/nijigp/docs/functionality/animation/rigging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/functionality/animation/rigging/</guid>
      <description>Rigging Utilities#Although Blender can automatically generate weights rigging Grease Pencil strokes to an armature, the result often requires heavy manual adjustment. NijiGPen provides with several alternative methods generating bone weights.
The rigging-related operations will show up in a panel when the current mode is Weight Paint.
It is recommended to add a Smooth modifier after the Armature modifier if the point movement looks unnatural.Transfer Weights from Meshes#The Weight From Meshes button is a tool transferring the weights from rigged mesh objects to the current Grease Pencil object.</description>
    </item>
    
    <item>
      <title>Stroke Tuning</title>
      <link>https://chsh2.github.io/nijigp/docs/functionality/line/tuning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/functionality/line/tuning/</guid>
      <description>Stroke Tuning#This group of operators is designed to perform some fine adjustments on the position and/or thickness of a line art.
Pinch#This operator closes the gaps between each pair of selected strokes if any of their tips are close together. The user can set a Transition value to determine whether to move the whole stroke or just move the tips.
The operation does not apply for the case where 3 or more strokes have their tips in proximity.</description>
    </item>
    
    <item>
      <title>Clipboard Utilities</title>
      <link>https://chsh2.github.io/nijigp/docs/functionality/io/clipboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/functionality/io/clipboard/</guid>
      <description>Clipboard Utilities#NijiGPen provides with the clipboard enhancement that allows users to paste specific types of data produced by other graphic editing software.
Paste SVG Codes#It is common for graphic design software to copy vector shapes as SVG code, including a small amount of painting software such as Clip Studio Paint. You can directly paste the shapes inside the current Grease Pencil object through NijiGPen.
The parsing of SVG codes is in the same way as the standard import function of Blender, except for an additional option to automatically detect holes in imported shapes and make them transparent.</description>
    </item>
    
    <item>
      <title>Smart Fill</title>
      <link>https://chsh2.github.io/nijigp/docs/functionality/line/smart_fill/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/functionality/line/smart_fill/</guid>
      <description>Smart Fill#Smart Fill is an operator in the Draw mode. It fills an entire line art layer based on some color hints marked by the user. Compared with the Blender&amp;rsquo;s default Fill tool, it has the following advantages:
It handles the gaps in the line art automatically. It is less likely to leave seams near the contour, or be intersected. Although the algorithms are different, the concept of this operation is similar to the Colorize Mask tool in Krita.</description>
    </item>
    
    <item>
      <title>Sweep</title>
      <link>https://chsh2.github.io/nijigp/docs/functionality/polygon/sweep/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/functionality/polygon/sweep/</guid>
      <description>Sweep#The Sweep operation drags stroke polygons along a given vector or path to create several effects, such as the pseudo-3D extrusion and shadowing.
The mathematical terminology behind this concept is Minkowski sum.
From Sidebar Panel#The Sweep button in the sidebar panel performs the operation on each selected stroke by typing the lengths of a 2D vector.
Shape Style#The following 3 styles apply:
Extrude: It turns the shapes into a pseudo-3D look.</description>
    </item>
    
    <item>
      <title>Hole Holdout</title>
      <link>https://chsh2.github.io/nijigp/docs/functionality/polygon/holdout/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/functionality/polygon/holdout/</guid>
      <description>Hole Holdout#To display holes inside a shape&amp;rsquo;s fill, Blender has a unique mechanism in Grease Pencil that is different from most vector graphic editing software. Users need to manually enable a Holdout option in the material setting to make a stroke transparent.
To simplify this process, NijiGPen provides with an operator to automatically detect holes among selected strokes. If a stroke&amp;rsquo;s path is completely inside another stroke&amp;rsquo;s fill:</description>
    </item>
    
    <item>
      <title>Vectorizing Images</title>
      <link>https://chsh2.github.io/nijigp/docs/functionality/io/vectorizing_images/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/functionality/io/vectorizing_images/</guid>
      <description>Vectorizing Images#The Trace Image to Grease Pencil tool of Blender is limited to black and white input images. NijiGPen provides with operators vectorizing another two types of raster images.
These operators take either a single image or an image sequence as the input, and generate new strokes in the current Grease Pencil layer. The direction of the generated strokes is parallel to the current 2D working plane.</description>
    </item>
    
    <item>
      <title>Hatch Fill</title>
      <link>https://chsh2.github.io/nijigp/docs/functionality/polygon/hatch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/functionality/polygon/hatch/</guid>
      <description>Hatch Fill#This is an Edit mode operator to generate doodle or hatch patterns inside the selected stroke shapes. Various types of stylized shading or coloring effects can be achieved with different combinations of options.
Line Styles#The operator will generate a grid of points inside each selected shape, while there are multiple ways to connect these points as new strokes:
Single-Line Doodle: In this mode, all points will be connected together to ensure that each input stroke generates only one output stroke.</description>
    </item>
    
    <item>
      <title>PSD Render</title>
      <link>https://chsh2.github.io/nijigp/docs/functionality/io/psd_render/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chsh2.github.io/nijigp/docs/functionality/io/psd_render/</guid>
      <description>PSD Render#The Multi-Layer PSD Render button renders each layer of the Grease Pencil object to a separate image, and then merge them together to a .psd file. The name, blend mode of each layer and the sequence of layers will be preserved. In this way, the image can be further edited in various popular image editing or painting software.
Besides the Grease Pencil layers, there are two additional PSD layers rendered.</description>
    </item>
    
  </channel>
</rss>
